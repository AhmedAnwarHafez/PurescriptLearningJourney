"use strict";
var Ch3 = require("../Ch3/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

// The function returns the password wrapped in 
// a Maybe if only its length is between 10 and 20 characters
var checkPasswordLength$prime = function (s) {
    var v = Data_Array.length(Data_String_CodeUnits.toCharArray(s)) > 20 || Data_Array.length(Data_String_CodeUnits.toCharArray(s)) < 10;
    if (v) {
        return Data_Maybe.Nothing.value;
    };
    if (!v) {
        return new Data_Maybe.Just(s);
    };
    throw new Error("Failed pattern match at Ch3e (line 13, column 5 - line 15, column 24): " + [ v.constructor.name ]);
};
var validatePassword = function (password) {
    var v = Ch3.cleanWhitespace(password);
    if (v instanceof Data_Maybe.Nothing) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_Maybe.Just) {
        var v1 = checkPasswordLength$prime(v.value0);
        if (v1 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (v1 instanceof Data_Maybe.Just) {
            var v2 = Ch3.requireAlphaNum(v.value0);
            if (v2 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (v2 instanceof Data_Maybe.Just) {
                return new Data_Maybe.Just(v.value0);
            };
            throw new Error("Failed pattern match at Ch3e (line 25, column 21 - line 27, column 40): " + [ v2.constructor.name ]);
        };
        throw new Error("Failed pattern match at Ch3e (line 22, column 13 - line 27, column 40): " + [ v1.constructor.name ]);
    };
    throw new Error("Failed pattern match at Ch3e (line 19, column 5 - line 27, column 40): " + [ v.constructor.name ]);
};
module.exports = {
    "checkPasswordLength'": checkPasswordLength$prime,
    validatePassword: validatePassword
};
