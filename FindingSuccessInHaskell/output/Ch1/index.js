// Generated by purs version 0.12.5
"use strict";
var Data_Ord = require("../Data.Ord/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var validateUserNamePassword = function (u) {
    return function (p) {
        var v = new Data_Tuple.Tuple(Data_String_Common["null"](u), Data_String_Common["null"](p));
        if (!v.value0 && !v.value1) {
            return "OK";
        };
        if (v.value0 && !v.value1) {
            return "Empty username";
        };
        if (!v.value0 && v.value1) {
            return "Empty password";
        };
        if (v.value0 && v.value1) {
            return "Empty username password";
        };
        throw new Error("Failed pattern match at Ch1 (line 40, column 5 - line 44, column 28): " + [ v.constructor.name ]);
    };
};
var f$prime$prime = function (x) {
    return function (y) {
        var v = x > y;
        if (v) {
            return x + 10 | 0;
        };
        if (!v) {
            return y;
        };
        throw new Error("Failed pattern match at Ch1 (line 19, column 5 - line 21, column 19): " + [ v.constructor.name ]);
    };
};
var f$prime = function (x) {
    return function (y) {
        var $14 = x > y;
        if ($14) {
            return x;
        };
        return y;
    };
};
var f = function (dictOrd) {
    return function (x) {
        return function (y) {
            var $15 = Data_Ord.greaterThan(dictOrd)(x)(y);
            if ($15) {
                return x;
            };
            return y;
        };
    };
};
var absVal$prime = function (x) {
    var v = x > 0;
    if (v) {
        return x;
    };
    return -x | 0;
};
var absVal = function (x) {
    var $17 = x < 0;
    if ($17) {
        return -x | 0;
    };
    return x;
};
module.exports = {
    f: f,
    "f'": f$prime,
    "f''": f$prime$prime,
    absVal: absVal,
    "absVal'": absVal$prime,
    validateUserNamePassword: validateUserNamePassword
};
