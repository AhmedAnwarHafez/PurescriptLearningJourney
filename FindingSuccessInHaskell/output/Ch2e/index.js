// Generated by purs version 0.12.5
"use strict";
var Ch2 = require("../Ch2/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var translateChar = function (c) {
    if (c === "e") {
        return "3";
    };
    if (c === "o") {
        return "0";
    };
    if (c === "A") {
        return "4";
    };
    if (c === "t") {
        return "7";
    };
    return c;
};
var translateWord = function (word) {
    return Data_String_CodeUnits.fromCharArray(Data_Functor.map(Data_Functor.functorArray)(translateChar)(Data_String_CodeUnits.toCharArray(word)));
};
var isPalindrome = function (word) {
    var v = Ch2.isWord(word);
    if (v instanceof Data_Maybe.Nothing) {
        return false;
    };
    if (v instanceof Data_Maybe.Just) {
        return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqChar))(Data_String_CodeUnits.toCharArray(word))(Data_Array.reverse(Data_String_CodeUnits.toCharArray(word)));
    };
    throw new Error("Failed pattern match at Ch2e (line 14, column 5 - line 17, column 69): " + [ v.constructor.name ]);
};
module.exports = {
    isPalindrome: isPalindrome,
    translateWord: translateWord,
    translateChar: translateChar
};
